[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\ESP32\Ejemplos\UART_NMEA0183\nmea0183_parser\build\bootloader\esp-idf\esptool_py && C:\ESP32\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/ESP32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
In file included from C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/main/main.c:23:
C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/main/headers/font8x8_basic.h:42:16: warning: 'font8x8_basic_tr' defined but not used [-Wunused-variable]
   42 | static uint8_t font8x8_basic_tr[128][8] = {
      |                ^~~~~~~~~~~~~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable nmea_parser.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build/nmea_parser.bin
[7/8] cmd.exe /C "cd /D C:\ESP32\Ejemplos\UART_NMEA0183\nmea0183_parser\build\esp-idf\esptool_py && C:\ESP32\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/ESP32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build/partition_table/partition-table.bin C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build/nmea_parser.bin"
nmea_parser.bin binary size 0x406b0 bytes. Smallest app partition is 0x100000 bytes. 0xbf950 bytes (75%) free.
[7/8] cmd.exe /C "cd /D C:\ESP32\esp-idf\components\esptool_py && C:\ESP32\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/ESP32/esp-idf -D SERIAL_TOOL=C:/ESP32/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/ESP32/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build -P C:/ESP32/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM5 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 nmea_parser.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev2
Serial port COM5
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c8:f0:9e:a6:a2:10
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00050fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16686...
Writing at 0x00001000... (50 %)
Writing at 0x0000768f... (100 %)
Wrote 26640 bytes (16686 compressed) at 0x00001000 in 0.8 seconds (effective 272.0 kbit/s)...
Hash of data verified.
Compressed 263856 bytes to 143996...
Writing at 0x00010000... (11 %)
Writing at 0x0001c950... (22 %)
Writing at 0x00024453... (33 %)
Writing at 0x0002a44f... (44 %)
Writing at 0x0002fe14... (55 %)
Writing at 0x00038196... (66 %)
Writing at 0x00040303... (77 %)
Writing at 0x00045cf0... (88 %)
Writing at 0x0004b93e... (100 %)
Wrote 263856 bytes (143996 compressed) at 0x00010000 in 3.5 seconds (effective 605.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 390.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
