[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/nmea_parser_example_main.c.obj
[2/10] Linking C static library esp-idf\main\libmain.a
[3/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\ESP32\Ejemplos\UART_NMEA0183\nmea0183_parser\build\bootloader\esp-idf\esptool_py && C:\ESP32\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/ESP32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable nmea_parser.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build/nmea_parser.bin
[7/8] cmd.exe /C "cd /D C:\ESP32\Ejemplos\UART_NMEA0183\nmea0183_parser\build\esp-idf\esptool_py && C:\ESP32\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/ESP32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build/partition_table/partition-table.bin C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build/nmea_parser.bin"
nmea_parser.bin binary size 0x33970 bytes. Smallest app partition is 0x100000 bytes. 0xcc690 bytes (80%) free.
[7/8] cmd.exe /C "cd /D C:\ESP32\esp-idf\components\esptool_py && C:\ESP32\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/ESP32/esp-idf -D SERIAL_TOOL=C:/ESP32/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/ESP32/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build -P C:/ESP32/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM5 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 nmea_parser.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev2
Serial port COM5

A fatal error occurred: Could not open COM5, the port is busy or doesn't exist.
(could not open port 'COM5': PermissionError(13, 'Acceso denegado.', None, 5))

FAILED: CMakeFiles/flash C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build/CMakeFiles/flash 
cmd.exe /C "cd /D C:\ESP32\esp-idf\components\esptool_py && C:\ESP32\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/ESP32/esp-idf -D SERIAL_TOOL=C:/ESP32/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/ESP32/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/ESP32/Ejemplos/UART_NMEA0183/nmea0183_parser/build -P C:/ESP32/esp-idf/components/esptool_py/run_serial_tool.cmake"
ninja: build stopped: subcommand failed.
